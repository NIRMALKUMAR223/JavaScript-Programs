scalable - means size / large amount of data
mongo duplicate is  also allowed

A - it will responsible for entire transaction(failure)
C - 5000 not more or not less how much data is required that much will be provided
I - other document are distrubing or not
D - once done transaction it update data is refelect in the Database


    sql                                 vs                              Nosql

It is RDBMS                                            It is Distributed Database or Nosql Database or Non-relationaldatabase

sql has Fixed schema or static schema                  It has Dynamic schema or schema less

It is suitable for complex queries                     It is not suitable for complex queries

sql supports ACID properties                           No-sql doesn't supports ACID properties

sql is vertically scalable                             No-sql is horizontal scalable

example:                                               example:
    mysql, oracle, sqllite, mssql etc                       mongo db, dynamo db, Hbase, couch db, redis etc




Nosql is a type of database management system (DBMS) that is designed to handle and store large 
volume of unstructured and semi-structed data.



Nosql database are generally calssified into four main categories:

Document Database:
    A document database stores data in json, bson, or XML document. 
    Document in the database can be nested.
    Document database are mongo db, apache, couch db.

Key-value stores:
    This is the  simplest type of Nosql database . 
    Every element stored in key value pair consisting of an attributes name ('key') and value.
    key-value database are amazon, redis, memecached, dinamodb.

column-family store / wide-column store:
    while an RDBMS stores data in row and reads it row and reads it row by row, 
    column-oriented database are organized as a set of columns.
    wide-column database are cassandra, H-base.

Graph database:
    A Graph database focuses on the relationship between data element . 
    Each element is contained as a node. the connections between element in the database are called links or relationship. 
    Graph database are Neo4j.


ACID properties in DBMS

Atomicity:
    The entire transaction take place at once or doesn't happen at all.

Consistency:
    The database must be consistent before and after the transaction.

Isolation:
    Multiple transaction occur independently without interference.

Durability:
    The changes of a successful transaction occur even is the system failure occur.


what is json ? 
    JSON stands for javascript object notation.
    JSON is a open source data-interchange format.
    JSON is lightweight and self-describing.
    JSON oriented from javascript.
    JSON is easy to write.
    JSON is language independent.
    JSON supports data structures such as array and object.

what is bson ?
    BSON stands for binary JSON.
    It is almost similar to JSON.
    It has limited datatype.
    Data stored in the form of binary
    It is more faster than JSON.
    BSON can be understand only by machine where JSON can be understand only by humans.


founders of mongodb

eliot horrowitz
dweight marriman
kevin rayan

MongoDB:

    mongodb was introduced in the year of 2007 
    The first version released in the year 2009 mongodb 1.0
    It is cross platform, document based, open source, Distributed database
    It was written in c++
    It supports horizontal scaling, flexible, indexing, sharding, replica set. 
    If we want to store huge data mongodb is a best choice.

collection:

    Collection is group of mongodb document.
    It is the equivalent of an RDBMS table.
    A collection exists within database.
    Collection do not have a particular schema.
    Document within a collection can have different fields.

Document: 

    A document is set of key-value pair.
    Representation of document is curly braces {}.
    Document have dynamic schema.
    Common fields in the document may hold different type of data.
    Maximum size of each document is 16mb.

Capped Collection:

    When we want to restict the size of capped collection the we go for capped collection.
    Fixed size collection are called capped collection in mongodb.
    While creating a collection user must specify the collection's max size in bytes and max number of document to store.

    example:

        db.createCollection('mytrainer', {capped : true, size : 10000, max : 2})

        To check wheather capped_collection is created or not

        syntax: db.collectionName.isCappped()

Objectid:

    objectid will be generated by default at the time of field insertion.
    objectid is unique and it acts like a primary key for particular field.
    It is a 12 byte BSON type hexadecimal string.

    example:

        ObjectId('650c81b431bed4032b4')
        4 bytes: TimeStamp
        5 bytes: Random_Value
        3 bytes: increment

To read the document in mongodb we have 2 methods

find()

    It is a primary method for retrieving documents form a collection in mongodb.
    This method accepts a query object. if left empty all the document will be returned.
    If no matching document is found, it return empty space.
    If no data present in collection it will return empty space.

    syntax: db.collection.find({query},{projection}) 

        query : This is the filter criteria to specify which documents you want to retrive.
        projection : This define which fields to to include or exclude fro the result. if not specified all fields will be returned by default.

        example: To retrive all the documents

            db.student.find({}) or db.student.find()

            To retrive documents where age is 18

            db.student.find({age:18})

findOne()

    To select only one document we can use the findOne() method.
    This method accepts a query object. if left empty, it will return the first document it find in the collection.
    It return only one document , even if Multiple document match the criteria.
    If no matching document is found it will return null.

    syntax: db.collection.findOne({query},{projection}) 

        query:
        projection: 
            
            To retrive first document in collection.

            db.student.findOne({}) or db.student.findOne()
            
            To retrive the first matching document where age is 18.

            db.student.findOne({age : 18})

Operations:

    Operations are special symbols which are used to perfom specific tasks between two or more operands.

Query Operator:

    Query Operator in mongodb are used to filter document based on some specific criteria within their fields.

    $eq : matches the values of the field that equal to a specified value.

        Syntax: {field : { $eq : value} } or {field : value}

        example : db.emp.find({gender: {$eq: male}})

    $ne : matches all the values of the field that are not equal to a specified value.

        db.emp.find({gender : {$eq : male}})

    $gt : matches the value of the fields that are greater than a specified value.

        db.emp.find({age : {$gt: 20}})

    $gte : matches the value of the field that are greater than equal to the specified value.

        db.emp.find({age : {$gte: 1000}})

    $lt : matches the value of the field that are lesser than a specified value.

        db.emp.find({age : {$lt: 3000}})

    $lte : matches the value of the field that are less than equal to the specified value.

        db.emp.find({age : {$lte: 3000}})

    $in : matches the values specified in an array. 

    syntax : db.emp.find({age : {$in: [<value>, <value>, <value>, <value>]}})

        db.emp.find({sal : {$in : [5000, 1500]}})

    $nin : matches none of the values specified in an array.

    syntax : db.emp.find({age : {$nin: [<value>, <value>, <value>, <value>]}})

        db.emp.find({sal : {$in : [5000, 1500]}})